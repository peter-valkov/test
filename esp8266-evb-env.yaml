substitutions:
  name: "esp8266-evb-env"

esphome:
  name: "${name}"
  name_add_mac_suffix: true
  platform: ESP8266
  board: modwifi
  project:
    name: "olimex.esphome-${name}"
    version: "1.0"

dashboard_import:
  package_import_url: github://peter-valkov/test/${name}.yaml

# Enable logging
logger:

# Enable Home Assistant API
api:

# Enable OTA updates
ota:

wifi:
  reboot_timeout: 5min  
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap: {}

# Enable captive portal
captive_portal:

i2c:
  sda: GPIO2
  scl: GPIO4

# sensors
sensor:
- platform: bme280
  temperature:
    name: "Temperature"
    oversampling: 16x
    id: TEMPERATURE
  pressure:
    name: "Pressure"
    id: PRESSURE
  humidity:
    name: "Humidity"
    id: HUMIDITY
  address: 0x76
  update_interval: 60s
  
- platform: ccs811
  eco2:
    name: "eCO2"
    id: ECO2
  tvoc:
    name: "Total Voltative Organic Compound"
    id: TVOC
  address: 0x5B
  update_interval: 60s

font:
  file: /usr/share/fonts/truetype/dejavu/DejaVuSans.ttf
  id: DejaVuSans_30
  size: 30

display:
  platform: ssd1306_i2c
  model: "SSD1306 128x64"
  rotation: 180
  id: OLED_DISPLAY
  pages:
    - id: PAGE_TEMPERATURE
      lambda: |-
        if (id(TVOC).has_state()) {
          it.printf(64, 0, id(DejaVuSans_30), TextAlign::TOP_CENTER, "%.1fÂ°C", id(TEMPERATURE).state);
        }
    - id: PAGE_HUMIDITY
      lambda: |-
        if (id(HUMIDITY).has_state()) {
          it.printf(64, 0, id(DejaVuSans_30), TextAlign::TOP_CENTER, "%.1f%%", id(HUMIDITY).state);
        }
    - id: PAGE_PRESSURE
      lambda: |-
        if (id(PRESSURE).has_state()) {
          it.printf(64, 0, id(DejaVuSans_30), TextAlign::TOP_CENTER, "%.1f", id(PRESSURE).state);
          it.printf(64, 32, id(DejaVuSans_30), TextAlign::TOP_CENTER, "hPa");
        }
    - id: PAGE_ECO2
      lambda: |-
        if (id(ECO2).has_state()) {
          it.printf(64, 0, id(DejaVuSans_30), TextAlign::TOP_CENTER, "%.0f", id(ECO2).state);
          it.printf(64, 32, id(DejaVuSans_30), TextAlign::TOP_CENTER, "ppm");
        }
    - id: PAGE_TVOC
      lambda: |-
        if (id(TVOC).has_state()) {
          it.printf(64, 0, id(DejaVuSans_30), TextAlign::TOP_CENTER, "%.0f", id(TVOC).state);
          it.printf(64, 32, id(DejaVuSans_30), TextAlign::TOP_CENTER, "ppb");
        }

interval:
  interval: 5s
  then:
    - display.page.show_next: OLED_DISPLAY
    - component.update: OLED_DISPLAY
